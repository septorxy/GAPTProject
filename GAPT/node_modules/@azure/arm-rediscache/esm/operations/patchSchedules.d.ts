import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { RedisManagementClientContext } from "../redisManagementClientContext";
/** Class representing a PatchSchedules. */
export declare class PatchSchedules {
    private readonly client;
    /**
     * Create a PatchSchedules.
     * @param {RedisManagementClientContext} client Reference to the service client.
     */
    constructor(client: RedisManagementClientContext);
    /**
     * Gets all patch schedules in the specified redis cache (there is only one).
     * @param resourceGroupName The name of the resource group.
     * @param cacheName The name of the Redis cache.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatchSchedulesListByRedisResourceResponse>
     */
    listByRedisResource(resourceGroupName: string, cacheName: string, options?: msRest.RequestOptionsBase): Promise<Models.PatchSchedulesListByRedisResourceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param cacheName The name of the Redis cache.
     * @param callback The callback
     */
    listByRedisResource(resourceGroupName: string, cacheName: string, callback: msRest.ServiceCallback<Models.RedisPatchScheduleListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param cacheName The name of the Redis cache.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByRedisResource(resourceGroupName: string, cacheName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RedisPatchScheduleListResult>): void;
    /**
     * Create or replace the patching schedule for Redis cache (requires Premium SKU).
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the Redis cache.
     * @param scheduleEntries List of patch schedules for a Redis cache.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatchSchedulesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, name: string, scheduleEntries: Models.ScheduleEntry[], options?: msRest.RequestOptionsBase): Promise<Models.PatchSchedulesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the Redis cache.
     * @param scheduleEntries List of patch schedules for a Redis cache.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, name: string, scheduleEntries: Models.ScheduleEntry[], callback: msRest.ServiceCallback<Models.RedisPatchSchedule>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the Redis cache.
     * @param scheduleEntries List of patch schedules for a Redis cache.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, name: string, scheduleEntries: Models.ScheduleEntry[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RedisPatchSchedule>): void;
    /**
     * Deletes the patching schedule of a redis cache (requires Premium SKU).
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the patching schedule of a redis cache (requires Premium SKU).
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatchSchedulesGetResponse>
     */
    get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.PatchSchedulesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param callback The callback
     */
    get(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.RedisPatchSchedule>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param name The name of the redis cache.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RedisPatchSchedule>): void;
    /**
     * Gets all patch schedules in the specified redis cache (there is only one).
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.PatchSchedulesListByRedisResourceNextResponse>
     */
    listByRedisResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PatchSchedulesListByRedisResourceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByRedisResourceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RedisPatchScheduleListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByRedisResourceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RedisPatchScheduleListResult>): void;
}
//# sourceMappingURL=patchSchedules.d.ts.map