import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { RedisManagementClientContext } from "./redisManagementClientContext";
declare class RedisManagementClient extends RedisManagementClientContext {
    operations: operations.Operations;
    redis: operations.Redis;
    firewallRules: operations.FirewallRules;
    patchSchedules: operations.PatchSchedules;
    linkedServer: operations.LinkedServer;
    /**
     * Initializes a new instance of the RedisManagementClient class.
     * @param credentials Credentials needed for the client to connect to Azure.
     * @param subscriptionId Gets subscription credentials which uniquely identify the Microsoft Azure
     * subscription. The subscription ID forms part of the URI for every service call.
     * @param [options] The parameter options
     */
    constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.RedisManagementClientOptions);
}
export { RedisManagementClient, RedisManagementClientContext, Models as RedisManagementModels, Mappers as RedisManagementMappers };
export * from "./operations";
//# sourceMappingURL=redisManagementClient.d.ts.map