/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var Sku = {
    serializedName: "Sku",
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            family: {
                required: true,
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                required: true,
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RedisAccessKeys = {
    serializedName: "RedisAccessKeys",
    type: {
        name: "Composite",
        className: "RedisAccessKeys",
        modelProperties: {
            primaryKey: {
                readOnly: true,
                serializedName: "primaryKey",
                type: {
                    name: "String"
                }
            },
            secondaryKey: {
                readOnly: true,
                serializedName: "secondaryKey",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisLinkedServer = {
    serializedName: "RedisLinkedServer",
    type: {
        name: "Composite",
        className: "RedisLinkedServer",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisInstanceDetails = {
    serializedName: "RedisInstanceDetails",
    type: {
        name: "Composite",
        className: "RedisInstanceDetails",
        modelProperties: {
            sslPort: {
                readOnly: true,
                serializedName: "sslPort",
                type: {
                    name: "Number"
                }
            },
            nonSslPort: {
                readOnly: true,
                serializedName: "nonSslPort",
                type: {
                    name: "Number"
                }
            },
            zone: {
                readOnly: true,
                serializedName: "zone",
                type: {
                    name: "String"
                }
            },
            shardId: {
                readOnly: true,
                serializedName: "shardId",
                type: {
                    name: "Number"
                }
            },
            isMaster: {
                readOnly: true,
                serializedName: "isMaster",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RedisCreateParameters = {
    serializedName: "RedisCreateParameters",
    type: {
        name: "Composite",
        className: "RedisCreateParameters",
        modelProperties: {
            redisConfiguration: {
                serializedName: "properties.redisConfiguration",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            enableNonSslPort: {
                serializedName: "properties.enableNonSslPort",
                type: {
                    name: "Boolean"
                }
            },
            replicasPerMaster: {
                serializedName: "properties.replicasPerMaster",
                type: {
                    name: "Number"
                }
            },
            tenantSettings: {
                serializedName: "properties.tenantSettings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            shardCount: {
                serializedName: "properties.shardCount",
                type: {
                    name: "Number"
                }
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            },
            sku: {
                required: true,
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            subnetId: {
                serializedName: "properties.subnetId",
                constraints: {
                    Pattern: /^\/subscriptions\/[^\/]*\/resourceGroups\/[^\/]*\/providers\/Microsoft.(ClassicNetwork|Network)\/virtualNetworks\/[^\/]*\/subnets\/[^\/]*$/
                },
                type: {
                    name: "String"
                }
            },
            staticIP: {
                serializedName: "properties.staticIP",
                constraints: {
                    Pattern: /^\d+\.\d+\.\d+\.\d+$/
                },
                type: {
                    name: "String"
                }
            },
            zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RedisUpdateParameters = {
    serializedName: "RedisUpdateParameters",
    type: {
        name: "Composite",
        className: "RedisUpdateParameters",
        modelProperties: {
            redisConfiguration: {
                serializedName: "properties.redisConfiguration",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            enableNonSslPort: {
                serializedName: "properties.enableNonSslPort",
                type: {
                    name: "Boolean"
                }
            },
            replicasPerMaster: {
                serializedName: "properties.replicasPerMaster",
                type: {
                    name: "Number"
                }
            },
            tenantSettings: {
                serializedName: "properties.tenantSettings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            shardCount: {
                serializedName: "properties.shardCount",
                type: {
                    name: "Number"
                }
            },
            minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RedisFirewallRuleProperties = {
    serializedName: "RedisFirewallRuleProperties",
    type: {
        name: "Composite",
        className: "RedisFirewallRuleProperties",
        modelProperties: {
            startIP: {
                required: true,
                serializedName: "startIP",
                type: {
                    name: "String"
                }
            },
            endIP: {
                required: true,
                serializedName: "endIP",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisFirewallRule = {
    serializedName: "RedisFirewallRule",
    type: {
        name: "Composite",
        className: "RedisFirewallRule",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { startIP: {
                required: true,
                serializedName: "properties.startIP",
                type: {
                    name: "String"
                }
            }, endIP: {
                required: true,
                serializedName: "properties.endIP",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RedisFirewallRuleCreateParameters = {
    serializedName: "RedisFirewallRuleCreateParameters",
    type: {
        name: "Composite",
        className: "RedisFirewallRuleCreateParameters",
        modelProperties: {
            startIP: {
                required: true,
                serializedName: "properties.startIP",
                type: {
                    name: "String"
                }
            },
            endIP: {
                required: true,
                serializedName: "properties.endIP",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisResource = {
    serializedName: "RedisResource",
    type: {
        name: "Composite",
        className: "RedisResource",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { redisConfiguration: {
                serializedName: "properties.redisConfiguration",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, enableNonSslPort: {
                serializedName: "properties.enableNonSslPort",
                type: {
                    name: "Boolean"
                }
            }, replicasPerMaster: {
                serializedName: "properties.replicasPerMaster",
                type: {
                    name: "Number"
                }
            }, tenantSettings: {
                serializedName: "properties.tenantSettings",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, shardCount: {
                serializedName: "properties.shardCount",
                type: {
                    name: "Number"
                }
            }, minimumTlsVersion: {
                serializedName: "properties.minimumTlsVersion",
                type: {
                    name: "String"
                }
            }, sku: {
                required: true,
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, subnetId: {
                serializedName: "properties.subnetId",
                constraints: {
                    Pattern: /^\/subscriptions\/[^\/]*\/resourceGroups\/[^\/]*\/providers\/Microsoft.(ClassicNetwork|Network)\/virtualNetworks\/[^\/]*\/subnets\/[^\/]*$/
                },
                type: {
                    name: "String"
                }
            }, staticIP: {
                serializedName: "properties.staticIP",
                constraints: {
                    Pattern: /^\d+\.\d+\.\d+\.\d+$/
                },
                type: {
                    name: "String"
                }
            }, redisVersion: {
                readOnly: true,
                serializedName: "properties.redisVersion",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, hostName: {
                readOnly: true,
                serializedName: "properties.hostName",
                type: {
                    name: "String"
                }
            }, port: {
                readOnly: true,
                serializedName: "properties.port",
                type: {
                    name: "Number"
                }
            }, sslPort: {
                readOnly: true,
                serializedName: "properties.sslPort",
                type: {
                    name: "Number"
                }
            }, accessKeys: {
                readOnly: true,
                serializedName: "properties.accessKeys",
                type: {
                    name: "Composite",
                    className: "RedisAccessKeys"
                }
            }, linkedServers: {
                readOnly: true,
                serializedName: "properties.linkedServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisLinkedServer"
                        }
                    }
                }
            }, instances: {
                readOnly: true,
                serializedName: "properties.instances",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisInstanceDetails"
                        }
                    }
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var RedisRegenerateKeyParameters = {
    serializedName: "RedisRegenerateKeyParameters",
    type: {
        name: "Composite",
        className: "RedisRegenerateKeyParameters",
        modelProperties: {
            keyType: {
                required: true,
                serializedName: "keyType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary"
                    ]
                }
            }
        }
    }
};
export var RedisRebootParameters = {
    serializedName: "RedisRebootParameters",
    type: {
        name: "Composite",
        className: "RedisRebootParameters",
        modelProperties: {
            rebootType: {
                serializedName: "rebootType",
                type: {
                    name: "String"
                }
            },
            shardId: {
                serializedName: "shardId",
                type: {
                    name: "Number"
                }
            },
            ports: {
                serializedName: "ports",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            }
        }
    }
};
export var ExportRDBParameters = {
    serializedName: "ExportRDBParameters",
    type: {
        name: "Composite",
        className: "ExportRDBParameters",
        modelProperties: {
            format: {
                serializedName: "format",
                type: {
                    name: "String"
                }
            },
            prefix: {
                required: true,
                serializedName: "prefix",
                type: {
                    name: "String"
                }
            },
            container: {
                required: true,
                serializedName: "container",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ImportRDBParameters = {
    serializedName: "ImportRDBParameters",
    type: {
        name: "Composite",
        className: "ImportRDBParameters",
        modelProperties: {
            format: {
                serializedName: "format",
                type: {
                    name: "String"
                }
            },
            files: {
                required: true,
                serializedName: "files",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ScheduleEntry = {
    serializedName: "ScheduleEntry",
    type: {
        name: "Composite",
        className: "ScheduleEntry",
        modelProperties: {
            dayOfWeek: {
                required: true,
                serializedName: "dayOfWeek",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday",
                        "Everyday",
                        "Weekend"
                    ]
                }
            },
            startHourUtc: {
                required: true,
                serializedName: "startHourUtc",
                type: {
                    name: "Number"
                }
            },
            maintenanceWindow: {
                serializedName: "maintenanceWindow",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
export var ScheduleEntries = {
    serializedName: "ScheduleEntries",
    type: {
        name: "Composite",
        className: "ScheduleEntries",
        modelProperties: {
            scheduleEntries: {
                required: true,
                serializedName: "scheduleEntries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ScheduleEntry"
                        }
                    }
                }
            }
        }
    }
};
export var RedisPatchSchedule = {
    serializedName: "RedisPatchSchedule",
    type: {
        name: "Composite",
        className: "RedisPatchSchedule",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { scheduleEntries: {
                required: true,
                serializedName: "properties.scheduleEntries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ScheduleEntry"
                        }
                    }
                }
            } })
    }
};
export var RedisForceRebootResponse = {
    serializedName: "RedisForceRebootResponse",
    type: {
        name: "Composite",
        className: "RedisForceRebootResponse",
        modelProperties: {
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisLinkedServerCreateProperties = {
    serializedName: "RedisLinkedServerCreateProperties",
    type: {
        name: "Composite",
        className: "RedisLinkedServerCreateProperties",
        modelProperties: {
            linkedRedisCacheId: {
                required: true,
                serializedName: "linkedRedisCacheId",
                type: {
                    name: "String"
                }
            },
            linkedRedisCacheLocation: {
                required: true,
                serializedName: "linkedRedisCacheLocation",
                type: {
                    name: "String"
                }
            },
            serverRole: {
                required: true,
                serializedName: "serverRole",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary"
                    ]
                }
            }
        }
    }
};
export var RedisLinkedServerProperties = {
    serializedName: "RedisLinkedServerProperties",
    type: {
        name: "Composite",
        className: "RedisLinkedServerProperties",
        modelProperties: __assign(__assign({}, RedisLinkedServerCreateProperties.type.modelProperties), { provisioningState: {
                readOnly: true,
                serializedName: "provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RedisLinkedServerWithProperties = {
    serializedName: "RedisLinkedServerWithProperties",
    type: {
        name: "Composite",
        className: "RedisLinkedServerWithProperties",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { linkedRedisCacheId: {
                required: true,
                serializedName: "properties.linkedRedisCacheId",
                type: {
                    name: "String"
                }
            }, linkedRedisCacheLocation: {
                required: true,
                serializedName: "properties.linkedRedisCacheLocation",
                type: {
                    name: "String"
                }
            }, serverRole: {
                required: true,
                serializedName: "properties.serverRole",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary"
                    ]
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RedisLinkedServerCreateParameters = {
    serializedName: "RedisLinkedServerCreateParameters",
    type: {
        name: "Composite",
        className: "RedisLinkedServerCreateParameters",
        modelProperties: {
            linkedRedisCacheId: {
                required: true,
                serializedName: "properties.linkedRedisCacheId",
                type: {
                    name: "String"
                }
            },
            linkedRedisCacheLocation: {
                required: true,
                serializedName: "properties.linkedRedisCacheLocation",
                type: {
                    name: "String"
                }
            },
            serverRole: {
                required: true,
                serializedName: "properties.serverRole",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary"
                    ]
                }
            }
        }
    }
};
export var OperationDisplay = {
    serializedName: "Operation_display",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export var CheckNameAvailabilityParameters = {
    serializedName: "CheckNameAvailabilityParameters",
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UpgradeNotification = {
    serializedName: "UpgradeNotification",
    type: {
        name: "Composite",
        className: "UpgradeNotification",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            timestamp: {
                readOnly: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            upsellNotification: {
                readOnly: true,
                serializedName: "upsellNotification",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var NotificationListResponse = {
    serializedName: "NotificationListResponse",
    type: {
        name: "Composite",
        className: "NotificationListResponse",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpgradeNotification"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisListResult = {
    serializedName: "RedisListResult",
    type: {
        name: "Composite",
        className: "RedisListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisResource"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisFirewallRuleListResult = {
    serializedName: "RedisFirewallRuleListResult",
    type: {
        name: "Composite",
        className: "RedisFirewallRuleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisFirewallRule"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisPatchScheduleListResult = {
    serializedName: "RedisPatchScheduleListResult",
    type: {
        name: "Composite",
        className: "RedisPatchScheduleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisPatchSchedule"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RedisLinkedServerWithPropertiesList = {
    serializedName: "RedisLinkedServerWithPropertiesList",
    type: {
        name: "Composite",
        className: "RedisLinkedServerWithPropertiesList",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RedisLinkedServerWithProperties"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map